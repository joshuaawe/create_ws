#include "ros/ros.h"
#include <geometry_msgs/Pose.h> 
#include <gazebo_msgs/SpawnModel.h> 
#include <stdlib.h> 
#include<iostream> 
#include<fstream> 
#include <tf/transform_datatypes.h>

int main(int argc, char **argv) { 

ros::init(argc, argv, "spawn_sdf"); 
ros::NodeHandle nh;

    std::ifstream ifs;
    ifs.open("create_1.urdf");
    ros::ServiceClient spawn = nh.serviceClient< gazebo_msgs::SpawnModel> ("/gazebo/spawn_sdf_model");

    gazebo_msgs::SpawnModel s1;
    geometry_msgs::Pose p1;
    s1.request.model_name = "create_1";
    ifs >> s1.request.model_xml;
    s1.request.robot_namespace = "create_1";
    p1.position.x = 0.0;
    p1.position.y = 0.0;
    p1.position.z = 0.0;
    p1.orientation = tf::createQuaternionMsgFromYaw(0.0);
    s1.request.initial_pose = p1;
    s1.request.reference_frame = "";

if (spawn.call(s1)) 
{
 ROS_INFO("success"); 
} 
else 
{ 
ROS_ERROR("Failed to call service"); 
return 1; 
} 

return 0; 
}
